"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdast-util-compact";
exports.ids = ["vendor-chunks/mdast-util-compact"];
exports.modules = {

/***/ "(rsc)/./node_modules/mdast-util-compact/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mdast-util-compact/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar visit = __webpack_require__(/*! unist-util-visit */ \"(rsc)/./node_modules/unist-util-visit/index.js\");\nmodule.exports = compact;\n// Make an mdast tree compact by merging adjacent text nodes.\nfunction compact(tree, commonmark) {\n    visit(tree, visitor);\n    return tree;\n    function visitor(child, index, parent) {\n        var siblings = parent ? parent.children : [];\n        var prev = index && siblings[index - 1];\n        if (prev && child.type === prev.type && mergeable(prev, commonmark) && mergeable(child, commonmark)) {\n            if (child.value) {\n                prev.value += child.value;\n            }\n            if (child.children) {\n                prev.children = prev.children.concat(child.children);\n            }\n            siblings.splice(index, 1);\n            if (prev.position && child.position) {\n                prev.position.end = child.position.end;\n            }\n            return index;\n        }\n    }\n}\nfunction mergeable(node, commonmark) {\n    var start;\n    var end;\n    if (node.type === \"text\") {\n        if (!node.position) {\n            return true;\n        }\n        start = node.position.start;\n        end = node.position.end;\n        // Only merge nodes which occupy the same size as their `value`.\n        return start.line !== end.line || end.column - start.column === node.value.length;\n    }\n    return commonmark && node.type === \"blockquote\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1jb21wYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsUUFBUUMsbUJBQU9BLENBQUM7QUFFcEJDLE9BQU9DLE9BQU8sR0FBR0M7QUFFakIsNkRBQTZEO0FBQzdELFNBQVNBLFFBQVFDLElBQUksRUFBRUMsVUFBVTtJQUMvQk4sTUFBTUssTUFBTUU7SUFFWixPQUFPRjtJQUVQLFNBQVNFLFFBQVFDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxNQUFNO1FBQ25DLElBQUlDLFdBQVdELFNBQVNBLE9BQU9FLFFBQVEsR0FBRyxFQUFFO1FBQzVDLElBQUlDLE9BQU9KLFNBQVNFLFFBQVEsQ0FBQ0YsUUFBUSxFQUFFO1FBRXZDLElBQ0VJLFFBQ0FMLE1BQU1NLElBQUksS0FBS0QsS0FBS0MsSUFBSSxJQUN4QkMsVUFBVUYsTUFBTVAsZUFDaEJTLFVBQVVQLE9BQU9GLGFBQ2pCO1lBQ0EsSUFBSUUsTUFBTVEsS0FBSyxFQUFFO2dCQUNmSCxLQUFLRyxLQUFLLElBQUlSLE1BQU1RLEtBQUs7WUFDM0I7WUFFQSxJQUFJUixNQUFNSSxRQUFRLEVBQUU7Z0JBQ2xCQyxLQUFLRCxRQUFRLEdBQUdDLEtBQUtELFFBQVEsQ0FBQ0ssTUFBTSxDQUFDVCxNQUFNSSxRQUFRO1lBQ3JEO1lBRUFELFNBQVNPLE1BQU0sQ0FBQ1QsT0FBTztZQUV2QixJQUFJSSxLQUFLTSxRQUFRLElBQUlYLE1BQU1XLFFBQVEsRUFBRTtnQkFDbkNOLEtBQUtNLFFBQVEsQ0FBQ0MsR0FBRyxHQUFHWixNQUFNVyxRQUFRLENBQUNDLEdBQUc7WUFDeEM7WUFFQSxPQUFPWDtRQUNUO0lBQ0Y7QUFDRjtBQUVBLFNBQVNNLFVBQVVNLElBQUksRUFBRWYsVUFBVTtJQUNqQyxJQUFJZ0I7SUFDSixJQUFJRjtJQUVKLElBQUlDLEtBQUtQLElBQUksS0FBSyxRQUFRO1FBQ3hCLElBQUksQ0FBQ08sS0FBS0YsUUFBUSxFQUFFO1lBQ2xCLE9BQU87UUFDVDtRQUVBRyxRQUFRRCxLQUFLRixRQUFRLENBQUNHLEtBQUs7UUFDM0JGLE1BQU1DLEtBQUtGLFFBQVEsQ0FBQ0MsR0FBRztRQUV2QixnRUFBZ0U7UUFDaEUsT0FDRUUsTUFBTUMsSUFBSSxLQUFLSCxJQUFJRyxJQUFJLElBQUlILElBQUlJLE1BQU0sR0FBR0YsTUFBTUUsTUFBTSxLQUFLSCxLQUFLTCxLQUFLLENBQUNTLE1BQU07SUFFOUU7SUFFQSxPQUFPbkIsY0FBY2UsS0FBS1AsSUFBSSxLQUFLO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvZy1zdGFydGVyLXR5cGVzY3JpcHQvLi9ub2RlX21vZHVsZXMvbWRhc3QtdXRpbC1jb21wYWN0L2luZGV4LmpzPzYzZGMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbnZhciB2aXNpdCA9IHJlcXVpcmUoJ3VuaXN0LXV0aWwtdmlzaXQnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbXBhY3RcblxuLy8gTWFrZSBhbiBtZGFzdCB0cmVlIGNvbXBhY3QgYnkgbWVyZ2luZyBhZGphY2VudCB0ZXh0IG5vZGVzLlxuZnVuY3Rpb24gY29tcGFjdCh0cmVlLCBjb21tb25tYXJrKSB7XG4gIHZpc2l0KHRyZWUsIHZpc2l0b3IpXG5cbiAgcmV0dXJuIHRyZWVcblxuICBmdW5jdGlvbiB2aXNpdG9yKGNoaWxkLCBpbmRleCwgcGFyZW50KSB7XG4gICAgdmFyIHNpYmxpbmdzID0gcGFyZW50ID8gcGFyZW50LmNoaWxkcmVuIDogW11cbiAgICB2YXIgcHJldiA9IGluZGV4ICYmIHNpYmxpbmdzW2luZGV4IC0gMV1cblxuICAgIGlmIChcbiAgICAgIHByZXYgJiZcbiAgICAgIGNoaWxkLnR5cGUgPT09IHByZXYudHlwZSAmJlxuICAgICAgbWVyZ2VhYmxlKHByZXYsIGNvbW1vbm1hcmspICYmXG4gICAgICBtZXJnZWFibGUoY2hpbGQsIGNvbW1vbm1hcmspXG4gICAgKSB7XG4gICAgICBpZiAoY2hpbGQudmFsdWUpIHtcbiAgICAgICAgcHJldi52YWx1ZSArPSBjaGlsZC52YWx1ZVxuICAgICAgfVxuXG4gICAgICBpZiAoY2hpbGQuY2hpbGRyZW4pIHtcbiAgICAgICAgcHJldi5jaGlsZHJlbiA9IHByZXYuY2hpbGRyZW4uY29uY2F0KGNoaWxkLmNoaWxkcmVuKVxuICAgICAgfVxuXG4gICAgICBzaWJsaW5ncy5zcGxpY2UoaW5kZXgsIDEpXG5cbiAgICAgIGlmIChwcmV2LnBvc2l0aW9uICYmIGNoaWxkLnBvc2l0aW9uKSB7XG4gICAgICAgIHByZXYucG9zaXRpb24uZW5kID0gY2hpbGQucG9zaXRpb24uZW5kXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpbmRleFxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBtZXJnZWFibGUobm9kZSwgY29tbW9ubWFyaykge1xuICB2YXIgc3RhcnRcbiAgdmFyIGVuZFxuXG4gIGlmIChub2RlLnR5cGUgPT09ICd0ZXh0Jykge1xuICAgIGlmICghbm9kZS5wb3NpdGlvbikge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBzdGFydCA9IG5vZGUucG9zaXRpb24uc3RhcnRcbiAgICBlbmQgPSBub2RlLnBvc2l0aW9uLmVuZFxuXG4gICAgLy8gT25seSBtZXJnZSBub2RlcyB3aGljaCBvY2N1cHkgdGhlIHNhbWUgc2l6ZSBhcyB0aGVpciBgdmFsdWVgLlxuICAgIHJldHVybiAoXG4gICAgICBzdGFydC5saW5lICE9PSBlbmQubGluZSB8fCBlbmQuY29sdW1uIC0gc3RhcnQuY29sdW1uID09PSBub2RlLnZhbHVlLmxlbmd0aFxuICAgIClcbiAgfVxuXG4gIHJldHVybiBjb21tb25tYXJrICYmIG5vZGUudHlwZSA9PT0gJ2Jsb2NrcXVvdGUnXG59XG4iXSwibmFtZXMiOlsidmlzaXQiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNvbXBhY3QiLCJ0cmVlIiwiY29tbW9ubWFyayIsInZpc2l0b3IiLCJjaGlsZCIsImluZGV4IiwicGFyZW50Iiwic2libGluZ3MiLCJjaGlsZHJlbiIsInByZXYiLCJ0eXBlIiwibWVyZ2VhYmxlIiwidmFsdWUiLCJjb25jYXQiLCJzcGxpY2UiLCJwb3NpdGlvbiIsImVuZCIsIm5vZGUiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mdast-util-compact/index.js\n");

/***/ })

};
;