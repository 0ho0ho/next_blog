"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/trough";
exports.ids = ["vendor-chunks/trough"];
exports.modules = {

/***/ "(rsc)/./node_modules/trough/index.js":
/*!**************************************!*\
  !*** ./node_modules/trough/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar wrap = __webpack_require__(/*! ./wrap.js */ \"(rsc)/./node_modules/trough/wrap.js\");\nmodule.exports = trough;\ntrough.wrap = wrap;\nvar slice = [].slice;\n// Create new middleware.\nfunction trough() {\n    var fns = [];\n    var middleware = {};\n    middleware.run = run;\n    middleware.use = use;\n    return middleware;\n    // Run `fns`.  Last argument must be a completion handler.\n    function run() {\n        var index = -1;\n        var input = slice.call(arguments, 0, -1);\n        var done = arguments[arguments.length - 1];\n        if (typeof done !== \"function\") {\n            throw new Error(\"Expected function as last argument, not \" + done);\n        }\n        next.apply(null, [\n            null\n        ].concat(input));\n        // Run the next `fn`, if any.\n        function next(err) {\n            var fn = fns[++index];\n            var params = slice.call(arguments, 0);\n            var values = params.slice(1);\n            var length = input.length;\n            var pos = -1;\n            if (err) {\n                done(err);\n                return;\n            }\n            // Copy non-nully input into values.\n            while(++pos < length){\n                if (values[pos] === null || values[pos] === undefined) {\n                    values[pos] = input[pos];\n                }\n            }\n            input = values;\n            // Next or done.\n            if (fn) {\n                wrap(fn, next).apply(null, input);\n            } else {\n                done.apply(null, [\n                    null\n                ].concat(input));\n            }\n        }\n    }\n    // Add `fn` to the list.\n    function use(fn) {\n        if (typeof fn !== \"function\") {\n            throw new Error(\"Expected `fn` to be a function, not \" + fn);\n        }\n        fns.push(fn);\n        return middleware;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHJvdWdoL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsT0FBT0MsbUJBQU9BLENBQUM7QUFFbkJDLE9BQU9DLE9BQU8sR0FBR0M7QUFFakJBLE9BQU9KLElBQUksR0FBR0E7QUFFZCxJQUFJSyxRQUFRLEVBQUUsQ0FBQ0EsS0FBSztBQUVwQix5QkFBeUI7QUFDekIsU0FBU0Q7SUFDUCxJQUFJRSxNQUFNLEVBQUU7SUFDWixJQUFJQyxhQUFhLENBQUM7SUFFbEJBLFdBQVdDLEdBQUcsR0FBR0E7SUFDakJELFdBQVdFLEdBQUcsR0FBR0E7SUFFakIsT0FBT0Y7SUFFUCwwREFBMEQ7SUFDMUQsU0FBU0M7UUFDUCxJQUFJRSxRQUFRLENBQUM7UUFDYixJQUFJQyxRQUFRTixNQUFNTyxJQUFJLENBQUNDLFdBQVcsR0FBRyxDQUFDO1FBQ3RDLElBQUlDLE9BQU9ELFNBQVMsQ0FBQ0EsVUFBVUUsTUFBTSxHQUFHLEVBQUU7UUFFMUMsSUFBSSxPQUFPRCxTQUFTLFlBQVk7WUFDOUIsTUFBTSxJQUFJRSxNQUFNLDZDQUE2Q0Y7UUFDL0Q7UUFFQUcsS0FBS0MsS0FBSyxDQUFDLE1BQU07WUFBQztTQUFLLENBQUNDLE1BQU0sQ0FBQ1I7UUFFL0IsNkJBQTZCO1FBQzdCLFNBQVNNLEtBQUtHLEdBQUc7WUFDZixJQUFJQyxLQUFLZixHQUFHLENBQUMsRUFBRUksTUFBTTtZQUNyQixJQUFJWSxTQUFTakIsTUFBTU8sSUFBSSxDQUFDQyxXQUFXO1lBQ25DLElBQUlVLFNBQVNELE9BQU9qQixLQUFLLENBQUM7WUFDMUIsSUFBSVUsU0FBU0osTUFBTUksTUFBTTtZQUN6QixJQUFJUyxNQUFNLENBQUM7WUFFWCxJQUFJSixLQUFLO2dCQUNQTixLQUFLTTtnQkFDTDtZQUNGO1lBRUEsb0NBQW9DO1lBQ3BDLE1BQU8sRUFBRUksTUFBTVQsT0FBUTtnQkFDckIsSUFBSVEsTUFBTSxDQUFDQyxJQUFJLEtBQUssUUFBUUQsTUFBTSxDQUFDQyxJQUFJLEtBQUtDLFdBQVc7b0JBQ3JERixNQUFNLENBQUNDLElBQUksR0FBR2IsS0FBSyxDQUFDYSxJQUFJO2dCQUMxQjtZQUNGO1lBRUFiLFFBQVFZO1lBRVIsZ0JBQWdCO1lBQ2hCLElBQUlGLElBQUk7Z0JBQ05yQixLQUFLcUIsSUFBSUosTUFBTUMsS0FBSyxDQUFDLE1BQU1QO1lBQzdCLE9BQU87Z0JBQ0xHLEtBQUtJLEtBQUssQ0FBQyxNQUFNO29CQUFDO2lCQUFLLENBQUNDLE1BQU0sQ0FBQ1I7WUFDakM7UUFDRjtJQUNGO0lBRUEsd0JBQXdCO0lBQ3hCLFNBQVNGLElBQUlZLEVBQUU7UUFDYixJQUFJLE9BQU9BLE9BQU8sWUFBWTtZQUM1QixNQUFNLElBQUlMLE1BQU0seUNBQXlDSztRQUMzRDtRQUVBZixJQUFJb0IsSUFBSSxDQUFDTDtRQUVULE9BQU9kO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2ctc3RhcnRlci10eXBlc2NyaXB0Ly4vbm9kZV9tb2R1bGVzL3Ryb3VnaC9pbmRleC5qcz8zYzdlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG52YXIgd3JhcCA9IHJlcXVpcmUoJy4vd3JhcC5qcycpXG5cbm1vZHVsZS5leHBvcnRzID0gdHJvdWdoXG5cbnRyb3VnaC53cmFwID0gd3JhcFxuXG52YXIgc2xpY2UgPSBbXS5zbGljZVxuXG4vLyBDcmVhdGUgbmV3IG1pZGRsZXdhcmUuXG5mdW5jdGlvbiB0cm91Z2goKSB7XG4gIHZhciBmbnMgPSBbXVxuICB2YXIgbWlkZGxld2FyZSA9IHt9XG5cbiAgbWlkZGxld2FyZS5ydW4gPSBydW5cbiAgbWlkZGxld2FyZS51c2UgPSB1c2VcblxuICByZXR1cm4gbWlkZGxld2FyZVxuXG4gIC8vIFJ1biBgZm5zYC4gIExhc3QgYXJndW1lbnQgbXVzdCBiZSBhIGNvbXBsZXRpb24gaGFuZGxlci5cbiAgZnVuY3Rpb24gcnVuKCkge1xuICAgIHZhciBpbmRleCA9IC0xXG4gICAgdmFyIGlucHV0ID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDAsIC0xKVxuICAgIHZhciBkb25lID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXVxuXG4gICAgaWYgKHR5cGVvZiBkb25lICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGZ1bmN0aW9uIGFzIGxhc3QgYXJndW1lbnQsIG5vdCAnICsgZG9uZSlcbiAgICB9XG5cbiAgICBuZXh0LmFwcGx5KG51bGwsIFtudWxsXS5jb25jYXQoaW5wdXQpKVxuXG4gICAgLy8gUnVuIHRoZSBuZXh0IGBmbmAsIGlmIGFueS5cbiAgICBmdW5jdGlvbiBuZXh0KGVycikge1xuICAgICAgdmFyIGZuID0gZm5zWysraW5kZXhdXG4gICAgICB2YXIgcGFyYW1zID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDApXG4gICAgICB2YXIgdmFsdWVzID0gcGFyYW1zLnNsaWNlKDEpXG4gICAgICB2YXIgbGVuZ3RoID0gaW5wdXQubGVuZ3RoXG4gICAgICB2YXIgcG9zID0gLTFcblxuICAgICAgaWYgKGVycikge1xuICAgICAgICBkb25lKGVycilcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIC8vIENvcHkgbm9uLW51bGx5IGlucHV0IGludG8gdmFsdWVzLlxuICAgICAgd2hpbGUgKCsrcG9zIDwgbGVuZ3RoKSB7XG4gICAgICAgIGlmICh2YWx1ZXNbcG9zXSA9PT0gbnVsbCB8fCB2YWx1ZXNbcG9zXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFsdWVzW3Bvc10gPSBpbnB1dFtwb3NdXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaW5wdXQgPSB2YWx1ZXNcblxuICAgICAgLy8gTmV4dCBvciBkb25lLlxuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIHdyYXAoZm4sIG5leHQpLmFwcGx5KG51bGwsIGlucHV0KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZG9uZS5hcHBseShudWxsLCBbbnVsbF0uY29uY2F0KGlucHV0KSlcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBBZGQgYGZuYCB0byB0aGUgbGlzdC5cbiAgZnVuY3Rpb24gdXNlKGZuKSB7XG4gICAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBgZm5gIHRvIGJlIGEgZnVuY3Rpb24sIG5vdCAnICsgZm4pXG4gICAgfVxuXG4gICAgZm5zLnB1c2goZm4pXG5cbiAgICByZXR1cm4gbWlkZGxld2FyZVxuICB9XG59XG4iXSwibmFtZXMiOlsid3JhcCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwidHJvdWdoIiwic2xpY2UiLCJmbnMiLCJtaWRkbGV3YXJlIiwicnVuIiwidXNlIiwiaW5kZXgiLCJpbnB1dCIsImNhbGwiLCJhcmd1bWVudHMiLCJkb25lIiwibGVuZ3RoIiwiRXJyb3IiLCJuZXh0IiwiYXBwbHkiLCJjb25jYXQiLCJlcnIiLCJmbiIsInBhcmFtcyIsInZhbHVlcyIsInBvcyIsInVuZGVmaW5lZCIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/trough/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/trough/wrap.js":
/*!*************************************!*\
  !*** ./node_modules/trough/wrap.js ***!
  \*************************************/
/***/ ((module) => {

eval("\nvar slice = [].slice;\nmodule.exports = wrap;\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n    var invoked;\n    return wrapped;\n    function wrapped() {\n        var params = slice.call(arguments, 0);\n        var callback = fn.length > params.length;\n        var result;\n        if (callback) {\n            params.push(done);\n        }\n        try {\n            result = fn.apply(null, params);\n        } catch (error) {\n            // Well, this is quite the pickle.\n            // `fn` received a callback and invoked it (thus continuing the pipeline),\n            // but later also threw an error.\n            // Weâ€™re not about to restart the pipeline again, so the only thing left\n            // to do is to throw the thing instead.\n            if (callback && invoked) {\n                throw error;\n            }\n            return done(error);\n        }\n        if (!callback) {\n            if (result && typeof result.then === \"function\") {\n                result.then(then, done);\n            } else if (result instanceof Error) {\n                done(result);\n            } else {\n                then(result);\n            }\n        }\n    }\n    // Invoke `next`, only once.\n    function done() {\n        if (!invoked) {\n            invoked = true;\n            callback.apply(null, arguments);\n        }\n    }\n    // Invoke `done` with one value.\n    // Tracks if an error is passed, too.\n    function then(value) {\n        done(null, value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdHJvdWdoL3dyYXAuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxRQUFRLEVBQUUsQ0FBQ0EsS0FBSztBQUVwQkMsT0FBT0MsT0FBTyxHQUFHQztBQUVqQixhQUFhO0FBQ2IsK0VBQStFO0FBQy9FLHlCQUF5QjtBQUN6QixTQUFTQSxLQUFLQyxFQUFFLEVBQUVDLFFBQVE7SUFDeEIsSUFBSUM7SUFFSixPQUFPQztJQUVQLFNBQVNBO1FBQ1AsSUFBSUMsU0FBU1IsTUFBTVMsSUFBSSxDQUFDQyxXQUFXO1FBQ25DLElBQUlMLFdBQVdELEdBQUdPLE1BQU0sR0FBR0gsT0FBT0csTUFBTTtRQUN4QyxJQUFJQztRQUVKLElBQUlQLFVBQVU7WUFDWkcsT0FBT0ssSUFBSSxDQUFDQztRQUNkO1FBRUEsSUFBSTtZQUNGRixTQUFTUixHQUFHVyxLQUFLLENBQUMsTUFBTVA7UUFDMUIsRUFBRSxPQUFPUSxPQUFPO1lBQ2Qsa0NBQWtDO1lBQ2xDLDBFQUEwRTtZQUMxRSxpQ0FBaUM7WUFDakMsd0VBQXdFO1lBQ3hFLHVDQUF1QztZQUN2QyxJQUFJWCxZQUFZQyxTQUFTO2dCQUN2QixNQUFNVTtZQUNSO1lBRUEsT0FBT0YsS0FBS0U7UUFDZDtRQUVBLElBQUksQ0FBQ1gsVUFBVTtZQUNiLElBQUlPLFVBQVUsT0FBT0EsT0FBT0ssSUFBSSxLQUFLLFlBQVk7Z0JBQy9DTCxPQUFPSyxJQUFJLENBQUNBLE1BQU1IO1lBQ3BCLE9BQU8sSUFBSUYsa0JBQWtCTSxPQUFPO2dCQUNsQ0osS0FBS0Y7WUFDUCxPQUFPO2dCQUNMSyxLQUFLTDtZQUNQO1FBQ0Y7SUFDRjtJQUVBLDRCQUE0QjtJQUM1QixTQUFTRTtRQUNQLElBQUksQ0FBQ1IsU0FBUztZQUNaQSxVQUFVO1lBRVZELFNBQVNVLEtBQUssQ0FBQyxNQUFNTDtRQUN2QjtJQUNGO0lBRUEsZ0NBQWdDO0lBQ2hDLHFDQUFxQztJQUNyQyxTQUFTTyxLQUFLRSxLQUFLO1FBQ2pCTCxLQUFLLE1BQU1LO0lBQ2I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2ctc3RhcnRlci10eXBlc2NyaXB0Ly4vbm9kZV9tb2R1bGVzL3Ryb3VnaC93cmFwLmpzPzVmYWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbnZhciBzbGljZSA9IFtdLnNsaWNlXG5cbm1vZHVsZS5leHBvcnRzID0gd3JhcFxuXG4vLyBXcmFwIGBmbmAuXG4vLyBDYW4gYmUgc3luYyBvciBhc3luYzsgcmV0dXJuIGEgcHJvbWlzZSwgcmVjZWl2ZSBhIGNvbXBsZXRpb24gaGFuZGxlciwgcmV0dXJuXG4vLyBuZXcgdmFsdWVzIGFuZCBlcnJvcnMuXG5mdW5jdGlvbiB3cmFwKGZuLCBjYWxsYmFjaykge1xuICB2YXIgaW52b2tlZFxuXG4gIHJldHVybiB3cmFwcGVkXG5cbiAgZnVuY3Rpb24gd3JhcHBlZCgpIHtcbiAgICB2YXIgcGFyYW1zID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDApXG4gICAgdmFyIGNhbGxiYWNrID0gZm4ubGVuZ3RoID4gcGFyYW1zLmxlbmd0aFxuICAgIHZhciByZXN1bHRcblxuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgcGFyYW1zLnB1c2goZG9uZSlcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gZm4uYXBwbHkobnVsbCwgcGFyYW1zKVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBXZWxsLCB0aGlzIGlzIHF1aXRlIHRoZSBwaWNrbGUuXG4gICAgICAvLyBgZm5gIHJlY2VpdmVkIGEgY2FsbGJhY2sgYW5kIGludm9rZWQgaXQgKHRodXMgY29udGludWluZyB0aGUgcGlwZWxpbmUpLFxuICAgICAgLy8gYnV0IGxhdGVyIGFsc28gdGhyZXcgYW4gZXJyb3IuXG4gICAgICAvLyBXZeKAmXJlIG5vdCBhYm91dCB0byByZXN0YXJ0IHRoZSBwaXBlbGluZSBhZ2Fpbiwgc28gdGhlIG9ubHkgdGhpbmcgbGVmdFxuICAgICAgLy8gdG8gZG8gaXMgdG8gdGhyb3cgdGhlIHRoaW5nIGluc3RlYWQuXG4gICAgICBpZiAoY2FsbGJhY2sgJiYgaW52b2tlZCkge1xuICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZG9uZShlcnJvcilcbiAgICB9XG5cbiAgICBpZiAoIWNhbGxiYWNrKSB7XG4gICAgICBpZiAocmVzdWx0ICYmIHR5cGVvZiByZXN1bHQudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXN1bHQudGhlbih0aGVuLCBkb25lKVxuICAgICAgfSBlbHNlIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICBkb25lKHJlc3VsdClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoZW4ocmVzdWx0KVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEludm9rZSBgbmV4dGAsIG9ubHkgb25jZS5cbiAgZnVuY3Rpb24gZG9uZSgpIHtcbiAgICBpZiAoIWludm9rZWQpIHtcbiAgICAgIGludm9rZWQgPSB0cnVlXG5cbiAgICAgIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFyZ3VtZW50cylcbiAgICB9XG4gIH1cblxuICAvLyBJbnZva2UgYGRvbmVgIHdpdGggb25lIHZhbHVlLlxuICAvLyBUcmFja3MgaWYgYW4gZXJyb3IgaXMgcGFzc2VkLCB0b28uXG4gIGZ1bmN0aW9uIHRoZW4odmFsdWUpIHtcbiAgICBkb25lKG51bGwsIHZhbHVlKVxuICB9XG59XG4iXSwibmFtZXMiOlsic2xpY2UiLCJtb2R1bGUiLCJleHBvcnRzIiwid3JhcCIsImZuIiwiY2FsbGJhY2siLCJpbnZva2VkIiwid3JhcHBlZCIsInBhcmFtcyIsImNhbGwiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJyZXN1bHQiLCJwdXNoIiwiZG9uZSIsImFwcGx5IiwiZXJyb3IiLCJ0aGVuIiwiRXJyb3IiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/trough/wrap.js\n");

/***/ })

};
;