"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/detab";
exports.ids = ["vendor-chunks/detab"];
exports.modules = {

/***/ "(rsc)/./node_modules/detab/index.js":
/*!*************************************!*\
  !*** ./node_modules/detab/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nmodule.exports = detab;\nvar repeat = __webpack_require__(/*! repeat-string */ \"(rsc)/./node_modules/repeat-string/index.js\");\nvar tab = 0x09;\nvar lineFeed = 0x0a;\nvar carriageReturn = 0x0d;\n// Replace tabs with spaces, being smart about which column the tab is at and\n// which size should be used.\nfunction detab(value, size) {\n    var string = typeof value === \"string\";\n    var length = string && value.length;\n    var start = 0;\n    var index = -1;\n    var column = -1;\n    var tabSize = size || 4;\n    var results = [];\n    var code;\n    var add;\n    if (!string) {\n        throw new Error(\"detab expected string\");\n    }\n    while(++index < length){\n        code = value.charCodeAt(index);\n        if (code === tab) {\n            add = tabSize - (column + 1) % tabSize;\n            column += add;\n            results.push(value.slice(start, index) + repeat(\" \", add));\n            start = index + 1;\n        } else if (code === lineFeed || code === carriageReturn) {\n            column = -1;\n        } else {\n            column++;\n        }\n    }\n    results.push(value.slice(start));\n    return results.join(\"\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZGV0YWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUVqQixJQUFJQyxTQUFTQyxtQkFBT0EsQ0FBQztBQUVyQixJQUFJQyxNQUFNO0FBQ1YsSUFBSUMsV0FBVztBQUNmLElBQUlDLGlCQUFpQjtBQUVyQiw2RUFBNkU7QUFDN0UsNkJBQTZCO0FBQzdCLFNBQVNMLE1BQU1NLEtBQUssRUFBRUMsSUFBSTtJQUN4QixJQUFJQyxTQUFTLE9BQU9GLFVBQVU7SUFDOUIsSUFBSUcsU0FBU0QsVUFBVUYsTUFBTUcsTUFBTTtJQUNuQyxJQUFJQyxRQUFRO0lBQ1osSUFBSUMsUUFBUSxDQUFDO0lBQ2IsSUFBSUMsU0FBUyxDQUFDO0lBQ2QsSUFBSUMsVUFBVU4sUUFBUTtJQUN0QixJQUFJTyxVQUFVLEVBQUU7SUFDaEIsSUFBSUM7SUFDSixJQUFJQztJQUVKLElBQUksQ0FBQ1IsUUFBUTtRQUNYLE1BQU0sSUFBSVMsTUFBTTtJQUNsQjtJQUVBLE1BQU8sRUFBRU4sUUFBUUYsT0FBUTtRQUN2Qk0sT0FBT1QsTUFBTVksVUFBVSxDQUFDUDtRQUV4QixJQUFJSSxTQUFTWixLQUFLO1lBQ2hCYSxNQUFNSCxVQUFXLENBQUNELFNBQVMsS0FBS0M7WUFDaENELFVBQVVJO1lBQ1ZGLFFBQVFLLElBQUksQ0FBQ2IsTUFBTWMsS0FBSyxDQUFDVixPQUFPQyxTQUFTVixPQUFPLEtBQUtlO1lBQ3JETixRQUFRQyxRQUFRO1FBQ2xCLE9BQU8sSUFBSUksU0FBU1gsWUFBWVcsU0FBU1YsZ0JBQWdCO1lBQ3ZETyxTQUFTLENBQUM7UUFDWixPQUFPO1lBQ0xBO1FBQ0Y7SUFDRjtJQUVBRSxRQUFRSyxJQUFJLENBQUNiLE1BQU1jLEtBQUssQ0FBQ1Y7SUFFekIsT0FBT0ksUUFBUU8sSUFBSSxDQUFDO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvZy1zdGFydGVyLXR5cGVzY3JpcHQvLi9ub2RlX21vZHVsZXMvZGV0YWIvaW5kZXguanM/NWQzOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBkZXRhYlxuXG52YXIgcmVwZWF0ID0gcmVxdWlyZSgncmVwZWF0LXN0cmluZycpXG5cbnZhciB0YWIgPSAweDA5XG52YXIgbGluZUZlZWQgPSAweDBhXG52YXIgY2FycmlhZ2VSZXR1cm4gPSAweDBkXG5cbi8vIFJlcGxhY2UgdGFicyB3aXRoIHNwYWNlcywgYmVpbmcgc21hcnQgYWJvdXQgd2hpY2ggY29sdW1uIHRoZSB0YWIgaXMgYXQgYW5kXG4vLyB3aGljaCBzaXplIHNob3VsZCBiZSB1c2VkLlxuZnVuY3Rpb24gZGV0YWIodmFsdWUsIHNpemUpIHtcbiAgdmFyIHN0cmluZyA9IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZydcbiAgdmFyIGxlbmd0aCA9IHN0cmluZyAmJiB2YWx1ZS5sZW5ndGhcbiAgdmFyIHN0YXJ0ID0gMFxuICB2YXIgaW5kZXggPSAtMVxuICB2YXIgY29sdW1uID0gLTFcbiAgdmFyIHRhYlNpemUgPSBzaXplIHx8IDRcbiAgdmFyIHJlc3VsdHMgPSBbXVxuICB2YXIgY29kZVxuICB2YXIgYWRkXG5cbiAgaWYgKCFzdHJpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2RldGFiIGV4cGVjdGVkIHN0cmluZycpXG4gIH1cblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KGluZGV4KVxuXG4gICAgaWYgKGNvZGUgPT09IHRhYikge1xuICAgICAgYWRkID0gdGFiU2l6ZSAtICgoY29sdW1uICsgMSkgJSB0YWJTaXplKVxuICAgICAgY29sdW1uICs9IGFkZFxuICAgICAgcmVzdWx0cy5wdXNoKHZhbHVlLnNsaWNlKHN0YXJ0LCBpbmRleCkgKyByZXBlYXQoJyAnLCBhZGQpKVxuICAgICAgc3RhcnQgPSBpbmRleCArIDFcbiAgICB9IGVsc2UgaWYgKGNvZGUgPT09IGxpbmVGZWVkIHx8IGNvZGUgPT09IGNhcnJpYWdlUmV0dXJuKSB7XG4gICAgICBjb2x1bW4gPSAtMVxuICAgIH0gZWxzZSB7XG4gICAgICBjb2x1bW4rK1xuICAgIH1cbiAgfVxuXG4gIHJlc3VsdHMucHVzaCh2YWx1ZS5zbGljZShzdGFydCkpXG5cbiAgcmV0dXJuIHJlc3VsdHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZGV0YWIiLCJyZXBlYXQiLCJyZXF1aXJlIiwidGFiIiwibGluZUZlZWQiLCJjYXJyaWFnZVJldHVybiIsInZhbHVlIiwic2l6ZSIsInN0cmluZyIsImxlbmd0aCIsInN0YXJ0IiwiaW5kZXgiLCJjb2x1bW4iLCJ0YWJTaXplIiwicmVzdWx0cyIsImNvZGUiLCJhZGQiLCJFcnJvciIsImNoYXJDb2RlQXQiLCJwdXNoIiwic2xpY2UiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/detab/index.js\n");

/***/ })

};
;