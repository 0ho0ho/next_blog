"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/vfile-location";
exports.ids = ["vendor-chunks/vfile-location"];
exports.modules = {

/***/ "(rsc)/./node_modules/vfile-location/index.js":
/*!**********************************************!*\
  !*** ./node_modules/vfile-location/index.js ***!
  \**********************************************/
/***/ ((module) => {

eval("\nmodule.exports = factory;\nfunction factory(file) {\n    var contents = indices(String(file));\n    return {\n        toPosition: offsetToPositionFactory(contents),\n        toOffset: positionToOffsetFactory(contents)\n    };\n}\n// Factory to get the line and column-based `position` for `offset` in the bound\n// indices.\nfunction offsetToPositionFactory(indices) {\n    return offsetToPosition;\n    // Get the line and column-based `position` for `offset` in the bound indices.\n    function offsetToPosition(offset) {\n        var index = -1;\n        var length = indices.length;\n        if (offset < 0) {\n            return {};\n        }\n        while(++index < length){\n            if (indices[index] > offset) {\n                return {\n                    line: index + 1,\n                    column: offset - (indices[index - 1] || 0) + 1,\n                    offset: offset\n                };\n            }\n        }\n        return {};\n    }\n}\n// Factory to get the `offset` for a line and column-based `position` in the\n// bound indices.\nfunction positionToOffsetFactory(indices) {\n    return positionToOffset;\n    // Get the `offset` for a line and column-based `position` in the bound\n    // indices.\n    function positionToOffset(position) {\n        var line = position && position.line;\n        var column = position && position.column;\n        if (!isNaN(line) && !isNaN(column) && line - 1 in indices) {\n            return (indices[line - 2] || 0) + column - 1 || 0;\n        }\n        return -1;\n    }\n}\n// Get indices of line-breaks in `value`.\nfunction indices(value) {\n    var result = [];\n    var index = value.indexOf(\"\\n\");\n    while(index !== -1){\n        result.push(index + 1);\n        index = value.indexOf(\"\\n\", index + 1);\n    }\n    result.push(value.length + 1);\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdmZpbGUtbG9jYXRpb24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQUEsT0FBT0MsT0FBTyxHQUFHQztBQUVqQixTQUFTQSxRQUFRQyxJQUFJO0lBQ25CLElBQUlDLFdBQVdDLFFBQVFDLE9BQU9IO0lBRTlCLE9BQU87UUFDTEksWUFBWUMsd0JBQXdCSjtRQUNwQ0ssVUFBVUMsd0JBQXdCTjtJQUNwQztBQUNGO0FBRUEsZ0ZBQWdGO0FBQ2hGLFdBQVc7QUFDWCxTQUFTSSx3QkFBd0JILE9BQU87SUFDdEMsT0FBT007SUFFUCw4RUFBOEU7SUFDOUUsU0FBU0EsaUJBQWlCQyxNQUFNO1FBQzlCLElBQUlDLFFBQVEsQ0FBQztRQUNiLElBQUlDLFNBQVNULFFBQVFTLE1BQU07UUFFM0IsSUFBSUYsU0FBUyxHQUFHO1lBQ2QsT0FBTyxDQUFDO1FBQ1Y7UUFFQSxNQUFPLEVBQUVDLFFBQVFDLE9BQVE7WUFDdkIsSUFBSVQsT0FBTyxDQUFDUSxNQUFNLEdBQUdELFFBQVE7Z0JBQzNCLE9BQU87b0JBQ0xHLE1BQU1GLFFBQVE7b0JBQ2RHLFFBQVFKLFNBQVVQLENBQUFBLE9BQU8sQ0FBQ1EsUUFBUSxFQUFFLElBQUksS0FBSztvQkFDN0NELFFBQVFBO2dCQUNWO1lBQ0Y7UUFDRjtRQUVBLE9BQU8sQ0FBQztJQUNWO0FBQ0Y7QUFFQSw0RUFBNEU7QUFDNUUsaUJBQWlCO0FBQ2pCLFNBQVNGLHdCQUF3QkwsT0FBTztJQUN0QyxPQUFPWTtJQUVQLHVFQUF1RTtJQUN2RSxXQUFXO0lBQ1gsU0FBU0EsaUJBQWlCQyxRQUFRO1FBQ2hDLElBQUlILE9BQU9HLFlBQVlBLFNBQVNILElBQUk7UUFDcEMsSUFBSUMsU0FBU0UsWUFBWUEsU0FBU0YsTUFBTTtRQUV4QyxJQUFJLENBQUNHLE1BQU1KLFNBQVMsQ0FBQ0ksTUFBTUgsV0FBV0QsT0FBTyxLQUFLVixTQUFTO1lBQ3pELE9BQU8sQ0FBQ0EsT0FBTyxDQUFDVSxPQUFPLEVBQUUsSUFBSSxLQUFLQyxTQUFTLEtBQUs7UUFDbEQ7UUFFQSxPQUFPLENBQUM7SUFDVjtBQUNGO0FBRUEseUNBQXlDO0FBQ3pDLFNBQVNYLFFBQVFlLEtBQUs7SUFDcEIsSUFBSUMsU0FBUyxFQUFFO0lBQ2YsSUFBSVIsUUFBUU8sTUFBTUUsT0FBTyxDQUFDO0lBRTFCLE1BQU9ULFVBQVUsQ0FBQyxFQUFHO1FBQ25CUSxPQUFPRSxJQUFJLENBQUNWLFFBQVE7UUFDcEJBLFFBQVFPLE1BQU1FLE9BQU8sQ0FBQyxNQUFNVCxRQUFRO0lBQ3RDO0lBRUFRLE9BQU9FLElBQUksQ0FBQ0gsTUFBTU4sTUFBTSxHQUFHO0lBRTNCLE9BQU9PO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9nLXN0YXJ0ZXItdHlwZXNjcmlwdC8uL25vZGVfbW9kdWxlcy92ZmlsZS1sb2NhdGlvbi9pbmRleC5qcz9kNWVkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnlcblxuZnVuY3Rpb24gZmFjdG9yeShmaWxlKSB7XG4gIHZhciBjb250ZW50cyA9IGluZGljZXMoU3RyaW5nKGZpbGUpKVxuXG4gIHJldHVybiB7XG4gICAgdG9Qb3NpdGlvbjogb2Zmc2V0VG9Qb3NpdGlvbkZhY3RvcnkoY29udGVudHMpLFxuICAgIHRvT2Zmc2V0OiBwb3NpdGlvblRvT2Zmc2V0RmFjdG9yeShjb250ZW50cylcbiAgfVxufVxuXG4vLyBGYWN0b3J5IHRvIGdldCB0aGUgbGluZSBhbmQgY29sdW1uLWJhc2VkIGBwb3NpdGlvbmAgZm9yIGBvZmZzZXRgIGluIHRoZSBib3VuZFxuLy8gaW5kaWNlcy5cbmZ1bmN0aW9uIG9mZnNldFRvUG9zaXRpb25GYWN0b3J5KGluZGljZXMpIHtcbiAgcmV0dXJuIG9mZnNldFRvUG9zaXRpb25cblxuICAvLyBHZXQgdGhlIGxpbmUgYW5kIGNvbHVtbi1iYXNlZCBgcG9zaXRpb25gIGZvciBgb2Zmc2V0YCBpbiB0aGUgYm91bmQgaW5kaWNlcy5cbiAgZnVuY3Rpb24gb2Zmc2V0VG9Qb3NpdGlvbihvZmZzZXQpIHtcbiAgICB2YXIgaW5kZXggPSAtMVxuICAgIHZhciBsZW5ndGggPSBpbmRpY2VzLmxlbmd0aFxuXG4gICAgaWYgKG9mZnNldCA8IDApIHtcbiAgICAgIHJldHVybiB7fVxuICAgIH1cblxuICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICBpZiAoaW5kaWNlc1tpbmRleF0gPiBvZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBsaW5lOiBpbmRleCArIDEsXG4gICAgICAgICAgY29sdW1uOiBvZmZzZXQgLSAoaW5kaWNlc1tpbmRleCAtIDFdIHx8IDApICsgMSxcbiAgICAgICAgICBvZmZzZXQ6IG9mZnNldFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHt9XG4gIH1cbn1cblxuLy8gRmFjdG9yeSB0byBnZXQgdGhlIGBvZmZzZXRgIGZvciBhIGxpbmUgYW5kIGNvbHVtbi1iYXNlZCBgcG9zaXRpb25gIGluIHRoZVxuLy8gYm91bmQgaW5kaWNlcy5cbmZ1bmN0aW9uIHBvc2l0aW9uVG9PZmZzZXRGYWN0b3J5KGluZGljZXMpIHtcbiAgcmV0dXJuIHBvc2l0aW9uVG9PZmZzZXRcblxuICAvLyBHZXQgdGhlIGBvZmZzZXRgIGZvciBhIGxpbmUgYW5kIGNvbHVtbi1iYXNlZCBgcG9zaXRpb25gIGluIHRoZSBib3VuZFxuICAvLyBpbmRpY2VzLlxuICBmdW5jdGlvbiBwb3NpdGlvblRvT2Zmc2V0KHBvc2l0aW9uKSB7XG4gICAgdmFyIGxpbmUgPSBwb3NpdGlvbiAmJiBwb3NpdGlvbi5saW5lXG4gICAgdmFyIGNvbHVtbiA9IHBvc2l0aW9uICYmIHBvc2l0aW9uLmNvbHVtblxuXG4gICAgaWYgKCFpc05hTihsaW5lKSAmJiAhaXNOYU4oY29sdW1uKSAmJiBsaW5lIC0gMSBpbiBpbmRpY2VzKSB7XG4gICAgICByZXR1cm4gKGluZGljZXNbbGluZSAtIDJdIHx8IDApICsgY29sdW1uIC0gMSB8fCAwXG4gICAgfVxuXG4gICAgcmV0dXJuIC0xXG4gIH1cbn1cblxuLy8gR2V0IGluZGljZXMgb2YgbGluZS1icmVha3MgaW4gYHZhbHVlYC5cbmZ1bmN0aW9uIGluZGljZXModmFsdWUpIHtcbiAgdmFyIHJlc3VsdCA9IFtdXG4gIHZhciBpbmRleCA9IHZhbHVlLmluZGV4T2YoJ1xcbicpXG5cbiAgd2hpbGUgKGluZGV4ICE9PSAtMSkge1xuICAgIHJlc3VsdC5wdXNoKGluZGV4ICsgMSlcbiAgICBpbmRleCA9IHZhbHVlLmluZGV4T2YoJ1xcbicsIGluZGV4ICsgMSlcbiAgfVxuXG4gIHJlc3VsdC5wdXNoKHZhbHVlLmxlbmd0aCArIDEpXG5cbiAgcmV0dXJuIHJlc3VsdFxufVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmYWN0b3J5IiwiZmlsZSIsImNvbnRlbnRzIiwiaW5kaWNlcyIsIlN0cmluZyIsInRvUG9zaXRpb24iLCJvZmZzZXRUb1Bvc2l0aW9uRmFjdG9yeSIsInRvT2Zmc2V0IiwicG9zaXRpb25Ub09mZnNldEZhY3RvcnkiLCJvZmZzZXRUb1Bvc2l0aW9uIiwib2Zmc2V0IiwiaW5kZXgiLCJsZW5ndGgiLCJsaW5lIiwiY29sdW1uIiwicG9zaXRpb25Ub09mZnNldCIsInBvc2l0aW9uIiwiaXNOYU4iLCJ2YWx1ZSIsInJlc3VsdCIsImluZGV4T2YiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/vfile-location/index.js\n");

/***/ })

};
;